// <auto-generated />
using System;
using ASPNetCore_EF_Attendances.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ASPNetCore_EF_Attendances.Migrations
{
    [DbContext(typeof(AttendancesContext))]
    [Migration("20230521212455_JoinEntityAndSeeding")]
    partial class JoinEntityAndSeeding
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ASPNetCore_EF_Attendances.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Courses");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Name = "Data Essentials"
                        },
                        new
                        {
                            ID = 2,
                            Name = "Data Advanced"
                        },
                        new
                        {
                            ID = 3,
                            Name = ".NET Essentials"
                        },
                        new
                        {
                            ID = 4,
                            Name = ".NET Advanced"
                        },
                        new
                        {
                            ID = 5,
                            Name = "Android Development"
                        },
                        new
                        {
                            ID = 6,
                            Name = "Integration Project"
                        },
                        new
                        {
                            ID = 7,
                            Name = "Expert Lab"
                        },
                        new
                        {
                            ID = 8,
                            Name = "Programming Project 1"
                        });
                });

            modelBuilder.Entity("ASPNetCore_EF_Attendances.Models.CourseStudent", b =>
                {
                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<int>("StudentID")
                        .HasColumnType("int");

                    b.HasKey("CourseID", "StudentID");

                    b.HasIndex("StudentID");

                    b.ToTable("CourseStudents");

                    b.HasData(
                        new
                        {
                            CourseID = 1,
                            StudentID = 1
                        },
                        new
                        {
                            CourseID = 1,
                            StudentID = 2
                        },
                        new
                        {
                            CourseID = 1,
                            StudentID = 3
                        },
                        new
                        {
                            CourseID = 1,
                            StudentID = 4
                        },
                        new
                        {
                            CourseID = 1,
                            StudentID = 5
                        },
                        new
                        {
                            CourseID = 2,
                            StudentID = 1
                        },
                        new
                        {
                            CourseID = 2,
                            StudentID = 2
                        },
                        new
                        {
                            CourseID = 2,
                            StudentID = 3
                        },
                        new
                        {
                            CourseID = 2,
                            StudentID = 4
                        },
                        new
                        {
                            CourseID = 2,
                            StudentID = 5
                        },
                        new
                        {
                            CourseID = 3,
                            StudentID = 1
                        },
                        new
                        {
                            CourseID = 3,
                            StudentID = 2
                        },
                        new
                        {
                            CourseID = 3,
                            StudentID = 3
                        },
                        new
                        {
                            CourseID = 3,
                            StudentID = 4
                        },
                        new
                        {
                            CourseID = 3,
                            StudentID = 5
                        },
                        new
                        {
                            CourseID = 4,
                            StudentID = 1
                        },
                        new
                        {
                            CourseID = 4,
                            StudentID = 2
                        },
                        new
                        {
                            CourseID = 4,
                            StudentID = 3
                        },
                        new
                        {
                            CourseID = 4,
                            StudentID = 4
                        },
                        new
                        {
                            CourseID = 4,
                            StudentID = 5
                        },
                        new
                        {
                            CourseID = 5,
                            StudentID = 1
                        },
                        new
                        {
                            CourseID = 5,
                            StudentID = 2
                        },
                        new
                        {
                            CourseID = 5,
                            StudentID = 3
                        },
                        new
                        {
                            CourseID = 5,
                            StudentID = 4
                        },
                        new
                        {
                            CourseID = 5,
                            StudentID = 5
                        },
                        new
                        {
                            CourseID = 6,
                            StudentID = 1
                        },
                        new
                        {
                            CourseID = 6,
                            StudentID = 2
                        },
                        new
                        {
                            CourseID = 6,
                            StudentID = 3
                        },
                        new
                        {
                            CourseID = 6,
                            StudentID = 4
                        },
                        new
                        {
                            CourseID = 6,
                            StudentID = 5
                        },
                        new
                        {
                            CourseID = 7,
                            StudentID = 1
                        },
                        new
                        {
                            CourseID = 7,
                            StudentID = 2
                        },
                        new
                        {
                            CourseID = 7,
                            StudentID = 3
                        },
                        new
                        {
                            CourseID = 7,
                            StudentID = 4
                        },
                        new
                        {
                            CourseID = 7,
                            StudentID = 5
                        },
                        new
                        {
                            CourseID = 8,
                            StudentID = 1
                        },
                        new
                        {
                            CourseID = 8,
                            StudentID = 2
                        },
                        new
                        {
                            CourseID = 8,
                            StudentID = 3
                        },
                        new
                        {
                            CourseID = 8,
                            StudentID = 4
                        },
                        new
                        {
                            CourseID = 8,
                            StudentID = 5
                        });
                });

            modelBuilder.Entity("ASPNetCore_EF_Attendances.Models.Lesson", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<int>("CourseID")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.ToTable("Lessons");
                });

            modelBuilder.Entity("ASPNetCore_EF_Attendances.Models.Student", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            FirstName = "Laura",
                            LastName = "Palmer"
                        },
                        new
                        {
                            ID = 2,
                            FirstName = "Donna",
                            LastName = "Hayward"
                        },
                        new
                        {
                            ID = 3,
                            FirstName = "Audrey",
                            LastName = "Horne"
                        },
                        new
                        {
                            ID = 4,
                            FirstName = "James",
                            LastName = "Hurley"
                        },
                        new
                        {
                            ID = 5,
                            FirstName = "Maddy",
                            LastName = "Ferguson"
                        });
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.Property<int>("CoursesID")
                        .HasColumnType("int");

                    b.Property<int>("StudentsID")
                        .HasColumnType("int");

                    b.HasKey("CoursesID", "StudentsID");

                    b.HasIndex("StudentsID");

                    b.ToTable("CourseStudent");
                });

            modelBuilder.Entity("LessonStudent", b =>
                {
                    b.Property<int>("LessonsID")
                        .HasColumnType("int");

                    b.Property<int>("StudentsID")
                        .HasColumnType("int");

                    b.HasKey("LessonsID", "StudentsID");

                    b.HasIndex("StudentsID");

                    b.ToTable("LessonStudent");
                });

            modelBuilder.Entity("ASPNetCore_EF_Attendances.Models.CourseStudent", b =>
                {
                    b.HasOne("ASPNetCore_EF_Attendances.Models.Course", "Course")
                        .WithMany("CourseStudents")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPNetCore_EF_Attendances.Models.Student", "Student")
                        .WithMany("CourseStudents")
                        .HasForeignKey("StudentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("ASPNetCore_EF_Attendances.Models.Lesson", b =>
                {
                    b.HasOne("ASPNetCore_EF_Attendances.Models.Course", "Course")
                        .WithMany("Lessons")
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("CourseStudent", b =>
                {
                    b.HasOne("ASPNetCore_EF_Attendances.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("CoursesID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPNetCore_EF_Attendances.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("LessonStudent", b =>
                {
                    b.HasOne("ASPNetCore_EF_Attendances.Models.Lesson", null)
                        .WithMany()
                        .HasForeignKey("LessonsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASPNetCore_EF_Attendances.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudentsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ASPNetCore_EF_Attendances.Models.Course", b =>
                {
                    b.Navigation("CourseStudents");

                    b.Navigation("Lessons");
                });

            modelBuilder.Entity("ASPNetCore_EF_Attendances.Models.Student", b =>
                {
                    b.Navigation("CourseStudents");
                });
#pragma warning restore 612, 618
        }
    }
}
